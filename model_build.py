import lightgbm
import yaml
import pandas as pd

dir = '/Users/Liu/NBA_Pro_Line_Analytics/'

with open(dir + 'config.yaml', 'r') as stream:
    try:
        config = yaml.load(stream)
    except yaml.YAMLError as exc:
        print(exc)

#Appends all datasets into one
test_frame = pd.read_csv(dir + config['NBA_Team_Cleaned_Data_v4'][0], index_col= [0])
test_columns = test_frame.columns.tolist()

base_df = pd.DataFrame(columns= test_columns)
for items in config['NBA_Team_Cleaned_Data_v4']:
    current_data = pd.read_csv(dir + items, index_col= [0])
    base_df = base_df.append(current_data)

#Parameters relating to basketball metrics
average_params = [
 'PPG_AVG_L6G_HT',
 'PPG_AVG_L5G_HT',
 'PPG_AVG_L4G_HT',
 'PPG_AVG_L3G_HT',
 'PPG_AVG_L2G_HT',
 'PPG_LG_HT',
 'APG_AVG_L6G_HT',
 'APG_AVG_L5G_HT',
 'APG_AVG_L4G_HT',
 'APG_AVG_L3G_HT',
 'APG_AVG_L2G_HT',
 'APG_LG_HT',
 'TOT_AVG_L6G_HT',
 'TOT_AVG_L5G_HT',
 'TOT_AVG_L4G_HT',
 'TOT_AVG_L3G_HT',
 'TOT_AVG_L2G_HT',
 'TOT_LG_HT',
 'ST_AVG_L6G_HT',
 'ST_AVG_L5G_HT',
 'ST_AVG_L4G_HT',
 'ST_AVG_L3G_HT',
 'ST_AVG_L2G_HT',
 'ST_LG_HT',
 'BL_AVG_L6G_HT',
 'BL_AVG_L5G_HT',
 'BL_AVG_L4G_HT',
 'BL_AVG_L3G_HT',
 'BL_AVG_L2G_HT',
 'BL_LG_HT',
 'FG_PCT_L6G_HT',
 'FG_PCT_L5G_HT',
 'FG_PCT_L4G_HT',
 'FG_PCT_L3G_HT',
 'FG_PCT_L2G_HT',
 'FG_PCT_LG_HT',
 'TS_PCT_L6G_HT',
 'TS_PCT_L5G_HT',
 'TS_PCT_L4G_HT',
 'TS_PCT_L3G_HT',
 'TS_PCT_L2G_HT',
 'TS_PCT_LG_HT',
 '3PT_PCT_L6G_HT',
 '3PT_PCT_L5G_HT',
 '3PT_PCT_L4G_HT',
 '3PT_PCT_L3G_HT',
 '3PT_PCT_L2G_HT',
 '3PT_PCT_LG_HT',
 'FT_PCT_L6G_HT',
 'FT_PCT_L5G_HT',
 'FT_PCT_L4G_HT',
 'FT_PCT_L3G_HT',
 'FT_PCT_L2G_HT',
 'FT_PCT_LG_HT',
 'OEFF_L6G_HT',
 'OEFF_L5G_HT',
 'OEFF_L4G_HT',
 'OEFF_L3G_HT',
 'OEFF_L2G_HT',
 'OEFF_LG_HT',
 'DEFF_L6G_HT',
 'DEFF_L5G_HT',
 'DEFF_L4G_HT',
 'DEFF_L3G_HT',
 'DEFF_L2G_HT',
 'DEFF_LG_HT',
 'PACE_L6G_HT',
 'PACE_L5G_HT',
 'PACE_L4G_HT',
 'PACE_L3G_HT',
 'PACE_L2G_HT',
 'PACE_LG_HT',
 'PPG_AVG_L6G_RT',
 'PPG_AVG_L5G_RT',
 'PPG_AVG_L4G_RT',
 'PPG_AVG_L3G_RT',
 'PPG_AVG_L2G_RT',
 'PPG_LG_RT',
 'APG_AVG_L6G_RT',
 'APG_AVG_L5G_RT',
 'APG_AVG_L4G_RT',
 'APG_AVG_L3G_RT',
 'APG_AVG_L2G_RT',
 'APG_LG_RT',
 'TOT_AVG_L6G_RT',
 'TOT_AVG_L5G_RT',
 'TOT_AVG_L4G_RT',
 'TOT_AVG_L3G_RT',
 'TOT_AVG_L2G_RT',
 'TOT_LG_RT',
 'ST_AVG_L6G_RT',
 'ST_AVG_L5G_RT',
 'ST_AVG_L4G_RT',
 'ST_AVG_L3G_RT',
 'ST_AVG_L2G_RT',
 'ST_LG_RT',
 'BL_AVG_L6G_RT',
 'BL_AVG_L5G_RT',
 'BL_AVG_L4G_RT',
 'BL_AVG_L3G_RT',
 'BL_AVG_L2G_RT',
 'BL_LG_RT',
 'FG_PCT_L6G_RT',
 'FG_PCT_L5G_RT',
 'FG_PCT_L4G_RT',
 'FG_PCT_L3G_RT',
 'FG_PCT_L2G_RT',
 'FG_PCT_LG_RT',
 'TS_PCT_L6G_RT',
 'TS_PCT_L5G_RT',
 'TS_PCT_L4G_RT',
 'TS_PCT_L3G_RT',
 'TS_PCT_L2G_RT',
 'TS_PCT_LG_RT',
 '3PT_PCT_L6G_RT',
 '3PT_PCT_L5G_RT',
 '3PT_PCT_L4G_RT',
 '3PT_PCT_L3G_RT',
 '3PT_PCT_L2G_RT',
 '3PT_PCT_LG_RT',
 'FT_PCT_L6G_RT',
 'FT_PCT_L5G_RT',
 'FT_PCT_L4G_RT',
 'FT_PCT_L3G_RT',
 'FT_PCT_L2G_RT',
 'FT_PCT_LG_RT',
 'OEFF_L6G_RT',
 'OEFF_L5G_RT',
 'OEFF_L4G_RT',
 'OEFF_L3G_RT',
 'OEFF_L2G_RT',
 'OEFF_LG_RT',
 'DEFF_L6G_RT',
 'DEFF_L5G_RT',
 'DEFF_L4G_RT',
 'DEFF_L3G_RT',
 'DEFF_L2G_RT',
 'DEFF_LG_RT',
 'PACE_L6G_RT',
 'PACE_L5G_RT',
 'PACE_L4G_RT',
 'PACE_L3G_RT',
 'PACE_L2G_RT',
 'PACE_LG_RT'
]
#Parameters relating to outcome of matches
joined_params = [
 'HT_Num_Wins_L10G',
 'RT_Num_Wins_L10G',
 'HT_Num_Wins_L9G',
 'RT_Num_Wins_L9G',
 'HT_Num_Wins_L8G',
 'RT_Num_Wins_L8G',
 'HT_Num_Wins_L7G',
 'RT_Num_Wins_L7G',
 'HT_Num_Wins_L6G',
 'RT_Num_Wins_L6G',
 'HT_Num_Wins_L5G',
 'RT_Num_Wins_L5G',
 'HT_Num_Wins_L4G',
 'RT_Num_Wins_L4G',
 'HT_AVG_PTdiff_L8G',
 'RT_AVG_PTdiff_L8G',
 'HT_AVG_PTdiff_L7G',
 'RT_AVG_PTdiff_L7G',
 'HT_AVG_PTdiff_L6G',
 'RT_AVG_PTdiff_L6G',
 'HT_AVG_PTdiff_L5G',
 'RT_AVG_PTdiff_L5G',
 'HT_AVG_PTdiff_L4G',
 'RT_AVG_PTdiff_L4G',
 'HT_AVG_PTdiff_L3G',
 'RT_AVG_PTdiff_L3G',
 'HT_AVG_PTdiff_L2G',
 'RT_AVG_PTdiff_L2G',
 'HT_AVG_PTdiff_LG',
 'RT_AVG_PTdiff_LG',
 'HT_within_5_outcome_cnt_L8G',
 'RT_within_5_outcome_cnt_L8G',
 'HT_win_6+_outcome_cnt_L8G',
 'RT_win_6+_outcome_cnt_L8G',
 'HT_lose_6+_outcome_cnt_L8G',
 'RT_lose_6+_outcome_cnt_L8G',
 'HT_within_5_outcome_cnt_L7G',
 'RT_within_5_outcome_cnt_L7G',
 'HT_win_6+_outcome_cnt_L7G',
 'RT_win_6+_outcome_cnt_L7G',
 'HT_lose_6+_outcome_cnt_L7G',
 'RT_lose_6+_outcome_cnt_L7G',
 'HT_within_5_outcome_cnt_L6G',
 'RT_within_5_outcome_cnt_L6G',
 'HT_win_6+_outcome_cnt_L6G',
 'RT_win_6+_outcome_cnt_L6G',
 'HT_lose_6+_outcome_cnt_L6G',
 'RT_lose_6+_outcome_cnt_L6G',
 'HT_within_5_outcome_cnt_L5G',
 'RT_within_5_outcome_cnt_L5G',
 'HT_win_6+_outcome_cnt_L5G',
 'RT_win_6+_outcome_cnt_L5G',
 'HT_lose_6+_outcome_cnt_L5G',
 'RT_lose_6+_outcome_cnt_L5G',
 'HT_within_5_outcome_cnt_L4G',
 'RT_within_5_outcome_cnt_L4G',
 'HT_win_6+_outcome_cnt_L4G',
 'RT_win_6+_outcome_cnt_L4G',
 'HT_lose_6+_outcome_cnt_L4G',
 'RT_lose_6+_outcome_cnt_L4G',
 'HT_within_5_outcome_cnt_L3G',
 'RT_within_5_outcome_cnt_L3G',
 'HT_win_6+_outcome_cnt_L3G',
 'RT_win_6+_outcome_cnt_L3G',
 'HT_lose_6+_outcome_cnt_L3G',
 'RT_lose_6+_outcome_cnt_L3G',
 'playoffs_ind'
]

base_df['playoffs_ind']  = base_df['playoffs_ind'].astype(int)
XVars = joined_params + average_params

#Defines the validation and model build dataset
build_data = base_df[base_df.DATE < '2017-10-17']
validation_data = base_df[base_df.DATE >= '2017-10-17']

